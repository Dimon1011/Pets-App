{"version":3,"sources":["useDropdown.js","Pet.js","Results.js","ThemeContext.js","SearchParams.js","Modal.js","Carousel.js","ErrorBoundary.js","Details.js","App.js","serviceWorker.js","index.js"],"names":["useDropdown","label","defaultState","options","useState","state","setState","id","replace","toLowerCase","htmlFor","value","onChange","event","target","disabled","length","map","item","key","Pets","name","animal","breed","media","location","hero","small","to","className","src","alt","Results","pets","pet","type","breeds","primary","photos","contact","address","city","ThemeContext","createContext","SearchParams","useContext","theme","setTheme","updateLocation","updateBreeds","setPets","ANIMALS","AnimalDropdown","BreedDropdown","updateBreed","a","animals","console","log","useEffect","then","breedStrings","error","onSubmit","e","preventDefault","requestPets","placeholder","onBlur","style","backgroundColor","Modal","children","elRef","useRef","current","div","document","createElement","modalRoot","getElementById","appendChild","removeChild","createPortal","Carousel","active","handleIndexClick","dataset","index","this","photo","onClick","data-index","large","React","Component","ErrorBoundary","hasError","redirect","info","setTimeout","props","Details","loading","showModal","toggleModal","adopt","navigate","url","description","Consumer","themeHook","DetailsWithErrorBoundary","App","StrictMode","Provider","path","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"8NAqBeA,EAnBK,SAACC,EAAOC,EAAcC,GAAa,IAAD,EACxBC,mBAASF,GADe,mBAC3CG,EAD2C,KACpCC,EADoC,KAE5CC,EAAE,wBAAoBN,EAAMO,QAAQ,IAAK,KAAKC,eAcpD,MAAO,CAACJ,EAbS,kBACb,2BAAOK,QAASH,GACXN,EACD,4BACAM,GAAIA,EACJI,MAAON,EACPO,SAAU,SAAAC,GAAK,OAAIP,EAASO,EAAMC,OAAOH,QACzCI,SAA6B,IAAnBZ,EAAQa,QACd,uCACCb,EAAQc,KAAI,SAAAC,GAAI,OAAK,4BAAQC,IAAKD,EAAMP,MAAOO,GAAOA,SAI1CZ,ICfd,SAASc,EAAT,GAA2D,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAUlB,EAAK,EAALA,GAC5DmB,EAAO,gCAKX,OAJGF,EAAMR,SACLU,EAAOF,EAAM,GAAGG,OAIhB,kBAAC,IAAD,CAAMC,GAAE,mBAAcrB,GAAMsB,UAAU,OAClC,yBAAKA,UAAU,mBACX,yBAAKC,IAAKJ,EAAMK,IAAKV,KAEzB,yBAAKQ,UAAU,QACf,4BAAKR,GACL,sCAAQC,EAAR,cAAoBC,EAApB,cAA+BE,MCb3C,IA0BeO,EA1BC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACE,yBAAKJ,UAAU,UACXI,EAAKjB,OAGLiB,EAAKhB,KAAI,SAAAiB,GACP,OACE,kBAAC,EAAD,CACEZ,OAAQY,EAAIC,KACZhB,IAAKe,EAAI3B,GACTc,KAAMa,EAAIb,KACVE,MAAOW,EAAIE,OAAOC,QAClBb,MAAOU,EAAII,OACXb,SAAQ,UAAKS,EAAIK,QAAQC,QAAQC,KAAzB,aACNP,EAAIK,QAAQC,QAAQnC,OAEtBE,GAAI2B,EAAI3B,QAbd,+CCHOmC,EAFMC,wBAAc,CAAC,QAAS,eC2E9BC,EAtEM,WAAO,IAAD,EACCC,qBAAWH,GADZ,mBAClBI,EADkB,KACXC,EADW,OAEU3C,mBAAS,eAFnB,mBAElBqB,EAFkB,KAERuB,EAFQ,OAGM5C,mBAAS,IAHf,mBAGlBgC,EAHkB,KAGVa,EAHU,OAID7C,mBAAS,IAJR,mBAIlB6B,EAJkB,KAIZiB,EAJY,OAKQlD,EAAY,SAAU,MAAOmD,WALrC,mBAKlB7B,EALkB,KAKV8B,EALU,OAMmBpD,EAAY,QAAS,GAAIoC,GAN5C,mBAMlBb,EANkB,KAMX8B,EANW,KAMIC,EANJ,iDAQzB,8BAAAC,EAAA,sEAC4BrB,IAAIsB,QAAQ,CACpC/B,WACAF,QACAY,KAAMb,IAJV,gBACUkC,EADV,EACUA,QAMRC,QAAQC,IAAI,UAAWF,GAEvBN,EAAQM,GAAW,IATrB,4CARyB,sBA+BzB,OAXAG,qBAAU,WACRV,EAAa,IACbK,EAAY,IAEZpB,IAAIE,OAAOd,GAAQsC,MAAK,YAAiB,IACjCC,EADgC,EAAbzB,OACGnB,KAAI,qBAAGI,QACnC4B,EAAaY,KACZJ,QAAQK,SAEV,CAACxC,IAGF,yBAAKO,UAAU,iBACb,0BACEkC,SAAU,SAAAC,GACRA,EAAEC,iBAnCe,mCAoCjBC,KAGF,2BAAOxD,QAAQ,YAAf,WAEE,2BACEH,GAAG,WACHI,MAAOc,EACP0C,YAAY,WACZvD,SAAU,SAAAoD,GAAC,OAAIhB,EAAegB,EAAElD,OAAOH,WAG3C,kBAACyC,EAAD,MACA,kBAACC,EAAD,MACA,2BAAO3C,QAAQ,YAAf,QAEE,4BACEC,MAAOmC,EACPlC,SAAU,SAAAoD,GAAC,OAAIjB,EAASiB,EAAElD,OAAOH,QACjCyD,OAAQ,SAAAJ,GAAC,OAAIjB,EAASiB,EAAElD,OAAOH,SAE/B,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,YAAd,aACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,gBAAd,mBAGJ,4BAAQ0D,MAAO,CAAEC,gBAAiBxB,IAAlC,WAEF,kBAAC,EAAD,CAASb,KAAMA,M,4BCnDNsC,EAhBD,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACNC,EAAQC,iBAAO,MACrB,IAAKD,EAAME,QAAS,CAChB,IAAMC,EAAMC,SAASC,cAAc,OACnCL,EAAME,QAAUC,EASpB,OANAjB,qBAAU,WACN,IAAMoB,EAAYF,SAASG,eAAe,SAE1C,OADAD,EAAUE,YAAYR,EAAME,SACrB,kBAAMI,EAAUG,YAAYT,EAAME,YAC1C,IAEIQ,uBAAa,6BAAMX,GAAiBC,EAAME,UC2BtCS,E,4MAzCX/E,MAAQ,CACJiC,OAAQ,GACR+C,OAAQ,G,EAWZC,iBAAmB,SAAAzE,GACf,EAAKP,SAAU,CACX+E,QAASxE,EAAMC,OAAOyE,QAAQC,S,uDAG3B,IAAD,SACqBC,KAAKpF,MAAxBiC,EADF,EACEA,OAAQ+C,EADV,EACUA,OAEhB,OACI,yBAAKxD,UAAU,YACX,yBAAKC,IAAKQ,EAAO+C,GAAStD,IAAI,WAC9B,yBAAKF,UAAU,oBACVS,EAAOrB,KAAI,SAACyE,EAAOF,GAAR,OACR,yBACIrE,IAAKuE,EACLC,QAAS,EAAKL,iBACdM,aAAYJ,EACZ1D,IAAK4D,EACL7D,UAAW2D,IAAUH,EAAS,SAAW,GACzCtD,IAAI,6B,mDA5BgB,IAAVP,EAAS,EAATA,MAC1Bc,EAAS,CAAC,iCAMd,OAJId,EAAMR,SACNsB,EAASd,EAAMP,KAAI,qBAAG4E,UAGnB,CAAEvD,c,GAZMwD,IAAMC,WC6BdC,E,4MA5BX3F,MAAQ,CAAE4F,UAAU,EACVC,UAAU,G,gEAIFpC,EAAOqC,GACrB1C,QAAQK,MAAM,gCAAiCA,EAAOqC,K,2CAEpC,IAAD,OACbV,KAAKpF,MAAM4F,UACXG,YAAW,kBAAM,EAAK9F,SAAS,CAAC4F,UAAS,MAAQ,O,+BAIrD,OAAGT,KAAKpF,MAAM6F,SACH,kBAAC,IAAD,CAAUtE,GAAG,MAEpB6D,KAAKpF,MAAM4F,SAEP,qEAA0C,kBAAC,IAAD,CAAMrE,GAAG,KAAT,cAA1C,cACC,IADD,0CAKD6D,KAAKY,MAAM7B,Y,kDArBlB,MAAO,CAACyB,UAAU,O,GAJEF,aCKtBO,E,4MAEFjG,MAAQ,CAAEkG,SAAS,EAAMC,WAAW,G,EA0BpCC,YAAc,kBAAM,EAAKnG,SAAS,CAACkG,WAAY,EAAKnG,MAAMmG,a,EAC1DE,MAAQ,kBAAMC,YAAS,EAAKtG,MAAMuG,M,kEAjBZ,IAAD,OACjB1E,IAAIZ,OAAOmE,KAAKY,MAAM9F,IAAIqD,MAAK,YAAe,IAAbtC,EAAY,EAAZA,OAC7B,EAAKhB,SAAS,CACVsG,IAAKtF,EAAOsF,IACZvF,KAAMC,EAAOD,KACbC,OAAQA,EAAOa,KACfV,SAAS,GAAD,OAAKH,EAAOiB,QAAQC,QAAQC,KAA5B,aAAqCnB,EAAOiB,QAAQC,QAAQnC,OACpEwG,YAAavF,EAAOuF,YACpBrF,MAAOF,EAAOgB,OACdf,MAAOD,EAAOc,OAAOC,QACrBkE,SAAS,S,+BASV,IAAD,OACN,GAAGd,KAAKpF,MAAMkG,QACV,OAAO,0CAFL,MAKiEd,KAAKpF,MAArEiB,EALD,EAKCA,OAAQC,EALT,EAKSA,MAAOE,EALhB,EAKgBA,SAAUoF,EAL1B,EAK0BA,YAAaxF,EALvC,EAKuCA,KAAMG,EAL7C,EAK6CA,MAAOgF,EALpD,EAKoDA,UAC1D,OACI,yBAAK3E,UAAU,WACf,kBAAC,EAAD,CAAUL,MAAOA,IACb,6BACA,4BAAKH,GACL,sCAAQC,EAAR,cAAoBC,EAApB,cAA+BE,IAC/B,kBAAC,EAAaqF,SAAd,MACK,SAACC,GAAD,OACG,4BACApB,QAAS,EAAKc,YACdpC,MAAO,CAACC,gBAAiByC,EAAU,KAFnC,SAE+C1F,MAGvD,2BAAIwF,GAEAL,EACA,kBAAC,EAAD,KACI,6BACI,uDAA6BnF,EAA7B,KACA,yBAAKQ,UAAU,WACX,4BAAQ8D,QAASF,KAAKiB,OAAtB,OACA,4BAAQf,QAASF,KAAKgB,aAAtB,uBAGA,W,GA7DVX,IAAMC,WAqEb,SAASiB,EAAyBX,GAC7C,OACI,kBAAC,EAAD,KACI,kBAAC,EAAaA,ICzE1B,IAmBeY,EAnBH,WACV,IAAMF,EAAY3G,mBAAS,YAC3B,OACE,kBAAC,IAAM8G,WAAP,KACE,kBAAC,EAAaC,SAAd,CAAuBxG,MAAOoG,GAC9B,6BACE,gCACE,kBAAC,IAAD,CAAMnF,GAAG,KAAT,cAEF,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAcwF,KAAK,MACnB,kBAAC,EAAD,CAASA,KAAK,sBCNJC,QACW,cAA7BC,OAAO7F,SAAS8F,UAEe,UAA7BD,OAAO7F,SAAS8F,UAEhBD,OAAO7F,SAAS8F,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMR,WAAP,KACA,yBAAKrF,UAAU,OACb,kBAAC,EAAD,QAGFgD,SAASG,eAAe,SDuHpB,kBAAmB2C,WACrBA,UAAUC,cAAcC,MACrBjE,MAAK,SAAAkE,GACJA,EAAaC,gBAEdC,OAAM,SAAAlE,GACLL,QAAQK,MAAMA,EAAMmE,a","file":"static/js/main.5e7bca0d.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst useDropdown = (label, defaultState, options) => {\n    const [state, setState] = useState(defaultState);\n    const id = `user-dropdown-${label.replace(\" \", \" \").toLowerCase()}`\n    const Dropdown = () => (\n        <label htmlFor={id}>\n            {label}\n            <select\n            id={id}\n            value={state}\n            onChange={event => setState(event.target.value)}\n            disabled={options.length === 0}>\n                <option>All</option>\n                {options.map(item => (<option key={item} value={item}>{item}</option>))}\n            </select>\n        </label>\n    );\n    return [state, Dropdown, setState];\n};\n\nexport default useDropdown;","import React from 'react';\nimport {Link} from '@reach/router';\n\nexport default function Pets({name, animal, breed, media, location, id}) {\n    let hero = 'http://placecorgi.com/300/300';\n    if(media.length){\n        hero = media[0].small;\n    }\n\n    return (\n        <Link to={`/details/${id}`} className='pet'>\n            <div className='image-container'>\n                <img src={hero} alt={name}/>\n            </div>\n            <div className='info'>\n            <h1>{name}</h1>\n            <h2>{`${animal} - ${breed} - ${location}`}</h2>\n\n            </div>\n        </Link>\n    )\n}","import React from \"react\";\nimport Pet from \"./Pet\";\n\nconst Results = ({ pets }) => {\n  return (\n    <div className=\"search\">\n      {!pets.length ? (\n        <h1>No Pets Found</h1>\n      ) : (\n        pets.map(pet => {\n          return (\n            <Pet\n              animal={pet.type}\n              key={pet.id}\n              name={pet.name}\n              breed={pet.breeds.primary}\n              media={pet.photos}\n              location={`${pet.contact.address.city}, ${\n                pet.contact.address.state\n              }`}\n              id={pet.id}\n            />\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default Results;","import { createContext } from 'react';\n\nconst ThemeContext = createContext(['green', () => {}]);\n\nexport default ThemeContext;","  \nimport React, { useState, useEffect, useContext } from \"react\";\nimport pet, { ANIMALS } from \"@frontendmasters/pet\";\nimport useDropdown from \"./useDropdown\";\nimport Results from \"./Results\";\nimport ThemeContext from \"./ThemeContext\";\n\nconst SearchParams = () => {\n  const [theme, setTheme] = useContext(ThemeContext);\n  const [location, updateLocation] = useState(\"Seattle, WA\");\n  const [breeds, updateBreeds] = useState([]);\n  const [pets, setPets] = useState([]);\n  const [animal, AnimalDropdown] = useDropdown(\"Animal\", \"dog\", ANIMALS);\n  const [breed, BreedDropdown, updateBreed] = useDropdown(\"Breed\", \"\", breeds);\n\n  async function requestPets() {\n    const { animals } = await pet.animals({\n      location,\n      breed,\n      type: animal\n    });\n\n    console.log(\"animals\", animals);\n\n    setPets(animals || []);\n  }\n\n  useEffect(() => {\n    updateBreeds([]);\n    updateBreed(\"\");\n\n    pet.breeds(animal).then(({ breeds }) => {\n      const breedStrings = breeds.map(({ name }) => name);\n      updateBreeds(breedStrings);\n    }, console.error);\n    // eslint-disable-next-line\n  }, [animal]); \n\n  return (\n    <div className=\"search-params\">\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          requestPets();\n        }}\n      >\n        <label htmlFor=\"location\">\n          Location\n          <input\n            id=\"location\"\n            value={location}\n            placeholder=\"Location\"\n            onChange={e => updateLocation(e.target.value)}\n          />\n        </label>\n        <AnimalDropdown />\n        <BreedDropdown />\n        <label htmlFor=\"location\">\n          Theme\n          <select\n            value={theme}\n            onChange={e => setTheme(e.target.value)}\n            onBlur={e => setTheme(e.target.value)}\n          >\n            <option value=\"peru\">Peru</option>\n            <option value=\"darkblue\">Dark Blue</option>\n            <option value=\"chartreuse\">Chartreuse</option>\n            <option value=\"mediumorchid\">Medium Orchid</option>\n          </select>\n        </label>\n        <button style={{ backgroundColor: theme }}>Submit</button>\n      </form>\n      <Results pets={pets} />\n    </div>\n  );\n};\n\nexport default SearchParams;","import React, {useEffect, useRef } from 'react';\nimport {createPortal} from 'react-dom';\n\n\n\nconst Modal = ({children}) => {\n    const elRef = useRef(null);\n    if (!elRef.current) {\n        const div = document.createElement('div');\n        elRef.current = div;\n    }\n\n    useEffect(() => {\n        const modalRoot = document.getElementById('modal');\n        modalRoot.appendChild(elRef.current);\n        return () => modalRoot.removeChild(elRef.current);\n    }, []);\n\n    return createPortal(<div>{children}</div>, elRef.current);\n};\n\nexport default Modal;","import React from 'react';\n\n\nclass Carousel extends React.Component {\n    state = {\n        photos: [],\n        active: 0\n    };\n    static getDerivedStateFromProps({ media }) {\n        let photos = ['http://placecorgi.com/600/600'];\n\n        if (media.length) {\n            photos = media.map(({ large }) => large);\n        }\n        \n        return { photos };\n    }\n    handleIndexClick = event => {\n        this.setState ({\n            active: +event.target.dataset.index\n        });\n    };\n    render () {\n        const { photos, active } = this.state;\n\n        return (\n            <div className=\"carousel\">\n                <img src={photos[active]} alt=\"animal\" />\n                <div className=\"carousel-smaller\">\n                    {photos.map((photo, index) => (\n                        <img\n                            key={photo}\n                            onClick={this.handleIndexClick}\n                            data-index={index}\n                            src={photo}\n                            className={index === active ? \"active\" : \"\"}\n                            alt=\"animal thumbnail\" \n                        />\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Carousel;","import React, {Component} from 'react';\nimport {Link, Redirect} from '@reach/router';\n\nclass ErrorBoundary extends Component {\n    state = { hasError: false,\n              redirect: false }\n    static getDerivedStateFromError () {\n        return {hasError: true};\n    }\n    componentDidCatch(error, info) {\n        console.error('ErrorBoundary caught an error', error, info);\n    }\n    componentDidUpdate() {\n        if (this.state.hasError) {\n            setTimeout(() => this.setState({redirect:true}), 5000);\n        }\n    }\n    render () {\n        if(this.state.redirect) {\n            return <Redirect to='/' />;\n        }\n        if (this.state.hasError) {\n            return (\n                <h1>There was an error with this listing. <Link to='/'>Click here</Link> to go back\n                {\" \"}\n                to the home page or wait five seconds.</h1>\n            )\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React from 'react';\nimport pet from '@frontendmasters/pet';\nimport { navigate } from '@reach/router';\nimport Modal from './Modal';\nimport Carousel from './Carousel';\nimport ErrorBoundary from './ErrorBoundary';\nimport ThemeContext from './ThemeContext';\n\nclass Details extends React.Component {\n\n    state = { loading: true, showModal: false }; \n\n    // constructor(props) {      //OLD WAY\n    //     super(props);        //........\n\n    //     this.state = {\n    //         loading: true\n    //     };\n    // }\n\n    componentDidMount () {\n        pet.animal(this.props.id).then(({animal}) => {\n            this.setState({\n                url: animal.url,\n                name: animal.name,\n                animal: animal.type,\n                location: `${animal.contact.address.city}, ${animal.contact.address.state}`,\n                description: animal.description,\n                media: animal.photos,\n                breed: animal.breeds.primary,\n                loading: false\n            })\n        })\n    \n    }\n\n    toggleModal = () => this.setState({showModal: !this.state.showModal});\n    adopt = () => navigate(this.state.url);\n\n    render () {\n        if(this.state.loading){\n            return <h1>Loading...</h1>\n        }\n\n        const {animal, breed, location, description, name, media, showModal} = this.state;\n        return(\n            <div className='details'>\n            <Carousel media={media}/>\n                <div>\n                <h1>{name}</h1>\n                <h2>{`${animal} - ${breed} - ${location}`}</h2>\n                <ThemeContext.Consumer>\n                    {(themeHook) => (\n                        <button \n                        onClick={this.toggleModal}\n                        style={{backgroundColor: themeHook[0]}}>Adopt {name}</button>\n                    )}\n                </ThemeContext.Consumer>\n                <p>{description}</p>\n                {\n                    showModal ? (\n                    <Modal>\n                        <div>\n                            <h1>Would you like to adopt {name}?</h1>\n                            <div className='buttons'>\n                                <button onClick={this.adopt}>Yes</button>\n                                <button onClick={this.toggleModal}>No, Im not ready</button>\n                            </div>\n                        </div>\n                    </Modal>) : null\n                }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default function DetailsWithErrorBoundary(props) {\n    return(\n        <ErrorBoundary>\n            <Details {... props}/>\n        </ErrorBoundary>\n    );\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { Router, Link } from '@reach/router';\nimport SearchParams from './SearchParams'\nimport Details from './Details';\nimport ThemeContext from './ThemeContext';\n\nconst App = () => {\n  const themeHook = useState('darkblue')\n  return (\n    <React.StrictMode>\n      <ThemeContext.Provider value={themeHook}>\n      <div>\n        <header>\n          <Link to=\"/\">Adopt Me!</Link>\n        </header>\n        <Router>\n          <SearchParams path=\"/\" />\n          <Details path=\"/details/:id\" />\n        </Router>\n      </div>\n      </ThemeContext.Provider>\n    </React.StrictMode>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n  <div className='App'>\n    <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}